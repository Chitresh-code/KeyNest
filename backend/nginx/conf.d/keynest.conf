# KeyNest API Nginx Virtual Host Configuration

# Upstream backend servers
upstream keynest_backend {
    least_conn;
    server api:8000 weight=1 max_fails=3 fail_timeout=30s;
    # Add more backend servers for horizontal scaling:
    # server api2:8000 weight=1 max_fails=3 fail_timeout=30s;
    
    # Health check (requires nginx-plus or custom module)
    # health_check interval=30s fails=3 passes=2 uri=/health/;
}

# HTTP to HTTPS redirect
server {
    listen 80;
    server_name keynest.com www.keynest.com api.keynest.com;
    
    # Allow Let's Encrypt ACME challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    # Redirect all other HTTP traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS server for API
server {
    listen 443 ssl http2;
    server_name api.keynest.com;

    # SSL Configuration
    ssl_certificate /etc/ssl/certs/keynest.crt;
    ssl_certificate_key /etc/ssl/certs/keynest.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;

    # HSTS
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

    # Rate limiting for API endpoints
    location /api/auth/ {
        limit_req zone=auth burst=10 nodelay;
        proxy_pass http://keynest_backend;
        include /etc/nginx/proxy_params;
    }

    location /api/ {
        limit_req zone=api burst=20 nodelay;
        proxy_pass http://keynest_backend;
        include /etc/nginx/proxy_params;
    }

    # Health check endpoint (no rate limiting)
    location /health/ {
        proxy_pass http://keynest_backend;
        include /etc/nginx/proxy_params;
        access_log off;
    }

    # Static files
    location /static/ {
        alias /app/static/;
        expires 30d;
        add_header Cache-Control "public, immutable";
        add_header Vary Accept-Encoding;
    }

    # Media files
    location /media/ {
        alias /app/media/;
        expires 7d;
        add_header Cache-Control "public";
    }

    # Security headers for API
    add_header X-API-Version "1.0.0" always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;

    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
}

# HTTP server for development/internal use
server {
    listen 8080;
    server_name localhost;

    # Development API access without SSL
    location / {
        proxy_pass http://keynest_backend;
        include /etc/nginx/proxy_params;
    }

    # Basic status page
    location /nginx-status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
    }
}